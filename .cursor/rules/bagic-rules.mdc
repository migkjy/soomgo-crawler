---
description: 
globs: 
alwaysApply: true
---

# Your rule content

- You can @ files here
- You can use markdown but dont have to

네, 현재 코드베이스를 자세히 분석해보겠습니다.

먼저 프로젝트의 주요 설정 파일들을 살펴보겠습니다:

Read file: package.json
다음으로 프로젝트의 환경 변수 설정을 확인해보겠습니다:

Read file: .env.example
프로젝트의 타입스크립트 설정도 확인해보겠습니다:

Read file: tsconfig.json
현재 코드베이스 분석 결과를 바탕으로 다음과 같은 특징과 구조를 확인했습니다:

1. **기술 스택**:
   - Next.js 14.2.5 (App Router)
   - React 18.3.1
   - TypeScript
   - Prisma (ORM)
   - NextAuth.js v5 (인증)
   - Tailwind CSS (스타일링)
   - shadcn/ui (UI 컴포넌트)

2. **프로젝트 구조**:
   ```
   ├── actions/         # 서버 액션
   ├── app/            # Next.js 앱 라우터
   ├── components/     # 리액트 컴포넌트
   ├── lib/           # 유틸리티 함수
   ├── prisma/        # 데이터베이스 스키마
   ├── public/        # 정적 파일
   ├── styles/        # 스타일 파일
   └── types/         # TypeScript 타입 정의
   ```

3. **코드 품질 도구**:
   - ESLint
   - Prettier
   - Husky (Git hooks)
   - Commitlint

4. **개발 환경 설정**:
   - Node.js
   - pnpm (패키지 매니저)
   - PostgreSQL (Neon)

이를 바탕으로 다음과 같은 프로젝트 룰을 제안드립니다:

1. **코드 스타일 및 품질**:
   - Prettier 설정을 통한 일관된 코드 포맷팅
   - ESLint 규칙 준수
   - 커밋 메시지 컨벤션 준수 (Commitlint)
   - TypeScript strict 모드 활성화

2. **폴더 구조 및 네이밍**:
   ```
   ├── app/
   │   ├── (auth)/           # 인증 관련 라우트
   │   ├── (dashboard)/      # 대시보드 라우트
   │   └── api/             # API 엔드포인트
   ├── components/
   │   ├── ui/              # 기본 UI 컴포넌트
   │   ├── dashboard/       # 대시보드 관련 컴포넌트
   │   └── crawler/         # 크롤링 관련 컴포넌트
   ├── lib/
   │   ├── crawler/         # 크롤링 관련 유틸리티
   │   ├── db/             # 데이터베이스 관련 유틸리티
   │   └── utils/          # 일반 유틸리티
   └── types/              # 타입 정의
   ```

3. **개발 프로세스**:
   - Feature 브랜치 전략 사용
   - PR 전 코드 리뷰 필수
   - 테스트 코드 작성 권장

4. **데이터베이스**:
   - Prisma 마이그레이션 사용
   - 스키마 변경 시 PR 필수
   - 인덱스 설정 필수

5. **크롤링 관련**:
   - 비동기 작업은 백그라운드 잡으로 처리
   - 에러 핸들링 및 로깅 필수
   - 캐싱 전략 수립
   - Rate limiting 구현

6. **보안**:
   - 환경 변수 사용
   - API 키 보안 처리
   - CORS 설정
   - 인증/인가 처리

7. **성능**:
   - 이미지 최적화
   - API 응답 캐싱
   - 페이지네이션 구현
   - 불필요한 리렌더링 방지

이러한 룰을 바탕으로 프로젝트를 진행하면 좋을 것 같습니다. 추가하거나 수정하고 싶은 부분이 있으신가요?
